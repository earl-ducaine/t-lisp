(HERALD (TSYS MACHAX T 73))

;;; Copyright (c) 1983, 1984 Yale University

;;; Hacks for T compiler when it runs in T.

;;; Macros

(DEFINE-MACRO (FUNCTION X) X)
(DEFINE-MACRO (PROGN . REST) `(BLOCK . ,REST))
(DEFINE-MACRO (PROG1 . REST) `(BLOCK0 . ,REST))
(DEFINE-MACRO (SETF . REST) `(SET . ,REST))
(DEFINE-MACRO (SETQ . REST) `(SET-VAR . ,REST))
(DEFINE-MACRO (FUNCALL . REST) REST)
(DEFINE-MACRO (DECLARE . REST) (IGNORE REST) ''DECLARE)
(DEFINE-MACRO (BREAK FOO) `(BREAKPOINT ',FOO))
(DEFINE-MACRO (DEFPROP X Y Z) `(PUT ',X ',Z ',Y))
(DEFINE-MACRO (CATCHALL X . BODY) `(BLOCK . ,BODY))
(DEFINE-MACRO (STATUS . REST) (IGNORE REST) 'NIL)

(DEFINE-MACRO (EVAL-WHEN WHEN . REST)
  (IF (MEMQ 'EVAL WHEN) `(BLOCK . ,REST)))

(DEFINE-MACRO (D0 . REST) `(CATCH RETURN (DO . ,REST)))

(DEFINE-MACRO (QLOZURE VARS PROC . METHS)
  (IGNORE VARS)
  (COND ((NULL? METHS) PROC)
        (ELSE `(OBJECT ,PROC . ,METHS))))

;;; Very crude approximation.

(DEFINE-MACRO (IOTA . REST)
  `(WITH-OPEN-FILES . ,REST))

(DEFINE-MACRO (PROGV VARS VALS . BODY)
  `(PROGV-HANDLER ,VARS ,VALS (LAMBDA () . ,BODY)))

(DEFINE (PROGV-HANDLER VARS VALS PROC)
  (LET ((SAVE (MAP PROJ0 VALS VARS)))
    (LET ((EXCH (LAMBDA ()
                  (DO ((SAVE SAVE (CDR SAVE))
                       (VARS VARS (CDR VARS)))
                      ((OR (NULL? VARS) (NULL? VALS)) NIL)
                    ;; Exchange (CAR SAVE) and (CONTENTS (CAR VARS)).
                    (SET (CAR SAVE)
                         (BLOCK0 (CONTENTS (CAR VARS))
                                 (SET-CONTENTS (CAR VARS) (CAR SAVE))))))))
      (BIND-HANDLER EXCH PROC EXCH))))

(DEFINE-MACRO (DEFUN STUFF ARGS . REST)
  (COND ((NOT (PAIR? STUFF))
         (ERROR "losing DEFUN - ~S" STUFF))
        (ELSE `(PUT ',(CAR STUFF) ',(CADR STUFF)
                    (LAMBDA ,ARGS . ,REST)))))

(DEFINE-MACRO (DEFVST TYPE . SPECS)
  `(BLOCK (DEFINE-STRUCTURE-TYPE ,TYPE
            ,@(MAP (LAMBDA (SPEC) (IF (ATOM? SPEC) SPEC (CAR SPEC))) SPECS))
          (LET ((%ORIG (STYPE-MASTER ,(CONCATENATE-SYMBOL TYPE '-STYPE))))
            (IGNORABLE %ORIG)
            ,@(MAP (LAMBDA (SPEC)
                     (COND ((ATOM? SPEC) 'NIL)
                           ((CDDR SPEC) (ERROR "whazza?"))
                           (ELSE
                            `(SET (,(CONCATENATE-SYMBOL TYPE '- (CAR SPEC))
                                      %ORIG)
                                  ,(CADR SPEC)))))
                   SPECS))
          (DEFINE-MACRO (,(CONCATENATE-SYMBOL 'CONS-A- TYPE) . CRAP)
            (EXPAND-CONS-A ',TYPE ',SPECS CRAP))))

(DEFINE (EXPAND-CONS-A TYPE SPECS CRAP)
  `(LET ((%%%%STRUCT%%%% (,(CONCATENATE-SYMBOL 'MAKE- TYPE))))
     ,@(DO ((C CRAP (CDDR C))
            (Z '() (CONS `(SET (,(CONCATENATE-SYMBOL TYPE '- (CAR C))
                                   %%%%STRUCT%%%%)
                               ,(CADR C))
                         Z)))
           ((NULL? C) (REVERSE! Z)))
     %%%%STRUCT%%%%))

(DEFINE-MACRO (WITH-OPEN-FILES SPECS . BODY)
  `(WITH-OPEN-STREAMS ,(MAP (LAMBDA (SPEC)
                              `(,(CAR SPEC) (OPEN ,@(CDR SPEC))))
                            SPECS)
                      . ,BODY))

;;; Aliases

(DEFINE-INTEGRABLE PRIN1 PRINT)
(DEFINE-INTEGRABLE PRIN PRINT)
(DEFINE-INTEGRABLE PRINC DISPLAY)
(DEFINE-INTEGRABLE REMPROP REM-PROPERTY)
(DEFINE-INTEGRABLE +LOAD LOAD)
(DEFINE-INTEGRABLE +MAP MAP)
(DEFINE-INTEGRABLE MAPCAR MAP)
(DEFINE-INTEGRABLE +NTH NTH)
(DEFINE-INTEGRABLE +NTHCDR NTHCDR)
(DEFINE-INTEGRABLE +LAST LAST)
(DEFINE-INTEGRABLE +APPLY APPLY)
(DEFINE-INTEGRABLE +READ READ)
(DEFINE-INTEGRABLE +EVAL EVAL)
(DEFINE-INTEGRABLE FIXNUM-IDENTITY IDENTITY)

;;; Random

(DEFINE (MEMBER OBJ LIST) (MEM  ALIKEV? OBJ LIST))
(DEFINE (ASSOC  OBJ LIST) (ASS  ALIKEV? OBJ LIST))

(DEFINE-INTEGRABLE (RPLACA X Y) (SET (CAR X) Y) X)
(DEFINE-INTEGRABLE (RPLACD X Y) (SET (CDR X) Y) X)

(DEFINE SET-CONTENTS (SETTER CONTENTS)) ; speed hack
(DEFINE SET-HPOS (SETTER HPOS))

(DEFINE (STYPE OBJ)                     ; horrible! 2 generic ops!
  (LET ((Z (STRUCTURE-TYPE OBJ)))
    (IF Z (STYPE-ID Z) NIL)))

(DEFINE-INTEGRABLE (RADIX-16-PRINT N STREAM)
  (FORMAT STREAM "~X" N))

(DEFINE RUNTIME (ALWAYS 0))             ; fix later
(DEFINE GCTIME  (ALWAYS 0))
(DEFINE (SITE) (FS-NAME (LOCAL-FS)))

(DEFINE-CONSTANT --- '---)
(DEFINE-CONSTANT ---- '----)

(DEFINE (FORMAT-NIL FMT . REST)
  (APPLY FORMAT NIL FMT REST))

(DEFINE (RESET-STRUCTURE OBJ)
  (COPY-STRUCTURE! OBJ (STYPE-MASTER (STRUCTURE-TYPE OBJ))))
