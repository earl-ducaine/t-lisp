;;; VAX TC support file for #[Filename VULCAN TCOMP OPTIMIZE T 0]
;;; TC version 1.4 (68)

(COMMENT (SOURCE-FILENAME #[Filename VULCAN TCOMP OPTIMIZE T 0]))
(COMMENT (HERALDED-FILENAME #[Filename () TCOMP OPTIMIZE T 217]))
(SYSBUILD-ITEM END)
(CPUT 'ERASE-NODE 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (NODE) (ERASE-NODES
NODE (QUOTE ONCE)))))
(CPUT 'ERASE-NODE 'DEFINED (QUOTE (1 . 1)))
(CPUT 'ERASE-ALL-NODES 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (NODE) (ERASE-NODES
NODE (QUOTE ALL)))))
(CPUT 'ERASE-ALL-NODES 'DEFINED (QUOTE (1 . 1)))
(CPUT 'ERASE-NODES-IN-LIST 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (NODELIST)
(ERASE-NODE-LIST NODELIST (QUOTE ONCE)))))
(CPUT 'ERASE-NODES-IN-LIST 'DEFINED (QUOTE (1 . 1)))
(CPUT 'ERASE-ALL-NODES-IN-LIST 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (NODELIST)
(ERASE-NODE-LIST NODELIST (QUOTE ALL)))))
(CPUT 'ERASE-ALL-NODES-IN-LIST 'DEFINED (QUOTE (1 . 1)))
(CPUT 'ERASE-NODES 'DEFINED (QUOTE (2 . 2)))
(CPUT 'ERASE-NODES-CONSTANT 'DEFINED (QUOTE (3 . 3)))
(CPUT 'ERASE-NODES-STATIC 'DEFINED (QUOTE (3 . 3)))
(CPUT 'ERASE-NODES-VARIABLE 'DEFINED (QUOTE (3 . 3)))
(CPUT 'ERASE-NODES-SETQ 'DEFINED (QUOTE (3 . 3)))
(CPUT 'ERASE-NODES-LAMBDA 'DEFINED (QUOTE (3 . 3)))
(CPUT 'ERASE-NODES-CATCH 'DEFINED (QUOTE (3 . 3)))
(CPUT 'ERASE-NODES-LABELS 'DEFINED (QUOTE (3 . 3)))
(CPUT 'ERASE-NODES-BLOCK 'DEFINED (QUOTE (3 . 3)))
(CPUT 'ERASE-NODES-IF 'DEFINED (QUOTE (3 . 3)))
(CPUT 'ERASE-NODES-CASE 'DEFINED (QUOTE (3 . 3)))
(CPUT 'ERASE-NODES-CALL 'DEFINED (QUOTE (3 . 3)))
(CPUT 'ERASE-NODE-LIST 'DEFINED (QUOTE (2 . 2)))
(CPUT 'META-BEFORE-TRACE 'DEFINED (QUOTE (1 . 1)))
(CPUT 'META-AFTER-TRACE 'DEFINED (QUOTE (2 . 2)))
(CPUT 'META-EVALUATE 'DEFINED (QUOTE (1 . 1)))
(CPUT 'META-EVALUATE-CONSTANT 'DEFINED (QUOTE (2 . 2)))
(CPUT 'META-EVALUATE-STATIC 'DEFINED (QUOTE (2 . 2)))
(CPUT 'META-EVALUATE-VARIABLE 'DEFINED (QUOTE (2 . 2)))
(CPUT 'META-EVALUATE-SETQ 'DEFINED (QUOTE (2 . 2)))
(CPUT 'META-EVALUATE-LAMBDA 'DEFINED (QUOTE (2 . 2)))
(CPUT 'FLUSH-UNREFERENCED-PARAMETERS 'DEFINED (QUOTE (1 . 1)))
(CPUT 'META-REMOVE-SETQS 'DEFINED (QUOTE (2 . 2)))
(CPUT 'META-EVALUATE-CATCH 'DEFINED (QUOTE (2 . 2)))
(CPUT 'META-EVALUATE-LABELS 'DEFINED (QUOTE (2 . 2)))
(CPUT 'META-EVALUATE-BLOCK 'DEFINED (QUOTE (2 . 2)))
(CPUT 'META-EVALUATE-IF 'DEFINED (QUOTE (2 . 2)))
(CPUT 'META-IF-IF 'DEFINED (QUOTE (1 . 1)))
(CPUT 'META-IF-CONSTANT 'DEFINED (QUOTE (1 . 1)))
(CPUT 'META-IF-VARIABLE 'DEFINED (QUOTE (1 . 1)))
(CPUT 'META-IF-BLOCK 'DEFINED (QUOTE (1 . 1)))
(CPUT 'META-IF-CALL-LAMBDA 'DEFINED (QUOTE (1 . 1)))
(CPUT 'META-EVALUATE-CASE 'DEFINED (QUOTE (2 . 2)))
(CPUT 'META-CASE-CONSTANT 'DEFINED (QUOTE (1 . 1)))
(CPUT 'META-CASE-BLOCK 'DEFINED (QUOTE (1 . 1)))
(CPUT 'META-CASE-CALL-LAMBDA 'DEFINED (QUOTE (1 . 1)))
(CPUT 'META-EVALUATE-CALL 'DEFINED (QUOTE (2 . 2)))
(CPUT 'META-CALL-STATIC 'DEFINED (QUOTE (1 . 1)))
(CPUT 'META-CALL-STATIC-1 'DEFINED (QUOTE (1 . 1)))
(CPUT 'CONSIDER-REVERSING-ARGUMENTS 'DEFINED (QUOTE (1 . 1)))
(CPUT 'META-CALL-VARIABLE 'DEFINED (QUOTE (1 . 1)))
(CPUT 'META-CALL-EXIT 'DEFINED (QUOTE (1 . 1)))
(CPUT 'META-CALL-SETTER 'DEFINED (QUOTE (1 . 1)))
(CPUT 'META-GET-SETTER 'DEFINED (QUOTE (1 . 1)))
(CPUT 'META-GET-SETTER-1 'DEFINED (QUOTE (1 . 1)))
(CPUT 'META-CALL-ALWAYSFN 'DEFINED (QUOTE (2 . 2)))
(CPUT 'META-CALL-PRIMOP 'DEFINED (QUOTE (1 . 1)))
(CPUT 'NODE-APPLY 'DEFINED (QUOTE (2 . 2)))
(CPUT 'CREATE-CONSTANT 'DEFINED (QUOTE (1 . 1)))
(CPUT 'CHANGE-CALL-FUNCTION 'DEFINED (QUOTE (2 . 2)))
(CPUT 'CONVERT-LAMBDA-TO-VARIABLE 'DEFINED (QUOTE (1 . 1)))
(CPUT 'CONVERT-VARIABLE-TO-LAMBDA 'DEFINED (QUOTE (2 . 2)))
(CPUT 'META-SOURCE-REWRITE 'DEFINED (QUOTE (2 . 2)))

