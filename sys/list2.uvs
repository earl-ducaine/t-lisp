;;; VAX TC support file for #[Filename VULCAN TSYS LIST2 T 0]
;;; TC version 1.4 (64)

(COMMENT (SOURCE-FILENAME #[Filename VULCAN TSYS LIST2 T 0]))
(COMMENT (HERALDED-FILENAME #[Filename () () LIST2]))
(SYSBUILD-ITEM END)
(CPUT 'BAD-LIST-INDEX 'DEFINED (QUOTE (0 . 9999)))
(CPUT 'NTHCDR 'DEFINED (QUOTE (2 . 2)))
(CPUT 'NTH 'DEFINED T)
(CPUT 'SET-NTH 'DEFINED (QUOTE (3 . 3)))
(CPUT 'LAST 'DEFINED T)
(CPUT 'SET-LAST 'DEFINED (QUOTE (2 . 2)))
(CPUT 'LASTCDR 'DEFINED (QUOTE (1 . 1)))
(CPUT 'CIRCULAR? 'DEFINED (QUOTE (2 . 2)))
(CPUT 'PROPER-LIST? 'DEFINED (QUOTE (1 . 1)))
(CPUT 'SUBLIST 'DEFINED (QUOTE (3 . 3)))
(CPUT 'ASS 'DEFINED (QUOTE (3 . 3)))
(CPUT 'ASS? 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (PRED OBJ LIST) (IF (ASS
PRED OBJ LIST) (QUOTE T) (QUOTE ())))))
(CPUT 'ASS? 'DEFINED (QUOTE (3 . 3)))
(CPUT 'ASSQ 'DEFINED (QUOTE (2 . 2)))
(CPUT 'ASSQ? 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (OBJ LIST) (IF (ASSQ OBJ
LIST) (QUOTE T) (QUOTE ())))))
(CPUT 'ASSQ? 'DEFINED (QUOTE (2 . 2)))
(CPUT 'DEL 'DEFINED (QUOTE (3 . 3)))
(CPUT 'DELQ 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (OBJ LIST) (DEL EQ? OBJ
LIST))))
(CPUT 'DELQ 'DEFINED (QUOTE (2 . 2)))
(CPUT 'DEL! 'DEFINED (QUOTE (3 . 3)))
(CPUT 'DELQ! 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (OBJ LIST) (DEL! EQ? OBJ
LIST))))
(CPUT 'DELQ! 'DEFINED (QUOTE (2 . 2)))
(CPUT 'POS 'DEFINED (QUOTE (3 . 3)))
(CPUT 'POSQ 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (OBJ L) (POS EQ? OBJ L))))
(CPUT 'POSQ 'DEFINED (QUOTE (2 . 2)))
(CPUT 'MEMASS 'DEFINED (QUOTE (3 . 3)))
(CPUT 'MEMASSQ 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (OBJ L) (MEMASS EQ? OBJ
L))))
(CPUT 'MEMASSQ 'DEFINED (QUOTE (2 . 2)))
(CPUT 'RASS 'DEFINED (QUOTE (3 . 3)))
(CPUT 'RASSQ 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (OBJ L) (RASS EQ? OBJ L))))
(CPUT 'RASSQ 'DEFINED (QUOTE (2 . 2)))
(CPUT 'APPEND 'DEFINED (QUOTE (0 . 9999)))
(CPUT 'COPY-LIST 'DEFINED (QUOTE (1 . 1)))
(CPUT 'REVERSE 'DEFINED (QUOTE (1 . 1)))
(CPUT 'APPEND-REVERSE 'DEFINED (QUOTE (2 . 2)))
(CPUT 'APPEND! 'DEFINED (QUOTE (0 . 9999)))
(CPUT 'DISPLACE 'DEFINED (QUOTE (2 . 2)))
(CPUT 'ANY? 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (PRED L) (IF (ANY PRED L)
(QUOTE T) (QUOTE ())))))
(CPUT 'ANY? 'DEFINED (QUOTE (2 . 2)))
(CPUT 'ANYCDR? 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (PRED L) (IF (ANYCDR
PRED L) (QUOTE T) (QUOTE ())))))
(CPUT 'ANYCDR? 'DEFINED (QUOTE (2 . 2)))
(CPUT 'EVERY? 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (PRED L) (IF (EVERY PRED
L) (QUOTE T) (QUOTE ())))))
(CPUT 'EVERY? 'DEFINED (QUOTE (2 . 2)))
(CPUT 'EVERYCDR? 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (PRED L) (IF (EVERYCDR
PRED L) (QUOTE T) (QUOTE ())))))
(CPUT 'EVERYCDR? 'DEFINED (QUOTE (2 . 2)))
(CPUT 'ANY 'DEFINED (QUOTE (2 . 2)))
(CPUT 'ANYCDR 'DEFINED (QUOTE (2 . 2)))
(CPUT 'EVERY 'DEFINED (QUOTE (2 . 2)))
(CPUT 'EVERYCDR 'DEFINED (QUOTE (2 . 2)))
(CPUT '*AND 'DEFINED (QUOTE (0 . 9999)))
(CPUT '*OR 'DEFINED (QUOTE (0 . 9999)))
(CPUT '*AND? 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA X (IF (EVERY IDENTITY X)
(QUOTE T) (QUOTE ())))))
(CPUT '*AND? 'DEFINED (QUOTE (0 . 9999)))
(CPUT '*OR? 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA X (IF (ANY IDENTITY X) (QUOTE
T) (QUOTE ())))))
(CPUT '*OR? 'DEFINED (QUOTE (0 . 9999)))
(CPUT '*IF 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (PRED CON ALT) (IF PRED CON
ALT))))
(CPUT '*IF 'DEFINED (QUOTE (3 . 3)))

