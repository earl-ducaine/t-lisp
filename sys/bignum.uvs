;;; VAX TC support file for #[Filename VULCAN TSYS BIGNUM T 0]
;;; TC version 1.4 (64)

(COMMENT (SOURCE-FILENAME #[Filename VULCAN TSYS BIGNUM T 0]))
(COMMENT (HERALDED-FILENAME #[Filename () () BIGNUM]))
(SYSBUILD-ITEM END)
(CPUT 'BIGNUM-STYPE 'DEFINED T)
(CPUT 'MAKE-BIGNUM 'DEFINED T)
(CPUT 'BIGNUM? 'DEFINED T)
(CPUT 'HANDLE-BIGNUM 'DEFINED T)
(CPUT 'BIGNUM-SIGN 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (OBJ) (EXTEND-ELT-FIXED
OBJ 2))))
(CPUT 'BIGNUM-SIGN 'DEFINED T)
(CPUT 'BIGNUM-SIGN 'SETTER (QUOTE (#[Syntax LAMBDA] (OBJ VAL) (SET-EXTEND-ELT-FIXED
OBJ 2 VAL))))
(CPUT 'BIGNUM-VECTOR 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (OBJ) (EXTEND-ELT-FIXED
OBJ 3))))
(CPUT 'BIGNUM-VECTOR 'DEFINED T)
(CPUT 'BIGNUM-VECTOR 'SETTER (QUOTE (#[Syntax LAMBDA] (OBJ VAL) (SET-EXTEND-ELT-FIXED
OBJ 3 VAL))))
(CPUT 'BIGSET 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (B N VAL) (SET-EXTEND-ELT
(EXTEND-ELT-FIXED B 3) N VAL))))
(CPUT 'BIGSET 'DEFINED (QUOTE (3 . 3)))
(CPUT 'BIGREF 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (B N) (EXTEND-ELT (EXTEND-ELT-FIXED
B 3) N))))
(CPUT 'BIGREF 'DEFINED T)
(CPUT 'CREATE-BIGNUM 'DEFINED (QUOTE (1 . 1)))
(CPUT 'SET-BIGNUM-SIZE 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (B SIZE) (BLOCK
(SET-VECTOR-LENGTH (EXTEND-ELT-FIXED B 3) SIZE) SIZE))))
(CPUT 'SET-BIGNUM-SIZE 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BIGNUM-SIZE 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (B) (VECTOR-LENGTH
(EXTEND-ELT-FIXED B 3)))))
(CPUT 'BIGNUM-SIZE 'DEFINED T)
(CPUT 'BIGNUM-SIZE 'SETTER (QUOTE SET-BIGNUM-SIZE))
(CPUT 'BIGNUM-POSITIVE? 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (NUM) (FIXNUM-GREATER?
(EXTEND-ELT-FIXED NUM 2) 0))))
(CPUT 'BIGNUM-POSITIVE? 'DEFINED (QUOTE (1 . 1)))
(CPUT 'SET-BIGNUM-SIGN 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (NUM SIGN) (BLOCK
(SET-EXTEND-ELT-FIXED NUM 2 SIGN) NUM))))
(CPUT 'SET-BIGNUM-SIGN 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BIGNUM-NEGATE! 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (NUM) (BLOCK (LET
((SET.30 (FIXNUM-NEGATE (EXTEND-ELT-FIXED NUM 2)))) (BLOCK (SET-EXTEND-ELT-FIXED
NUM 2 SET.30) SET.30)) NUM))))
(CPUT 'BIGNUM-NEGATE! 'DEFINED (QUOTE (1 . 1)))
(CPUT '*BITS-PER-HYPERDIGIT* 'CONSTANT (QUOTE 13))
(CPUT '*BITS-PER-HYPERDIGIT* 'DEFINED T)
(CPUT '*BITS-PER-FIXNUM* 'CONSTANT (QUOTE 29))
(CPUT '*BITS-PER-FIXNUM* 'DEFINED T)
(CPUT '*U-BITS-PER-FIXNUM* 'CONSTANT (QUOTE 28))
(CPUT '*U-BITS-PER-FIXNUM* 'DEFINED T)
(CPUT '*MAX-HYPERDIGIT* 'CONSTANT (QUOTE 8191))
(CPUT '*MAX-HYPERDIGIT* 'DEFINED T)
(CPUT '*HALF-MAX-HYPERDIGIT* 'CONSTANT (QUOTE 4095))
(CPUT '*HALF-MAX-HYPERDIGIT* 'DEFINED T)
(CPUT '*MIN-FIXNUM* 'CONSTANT (QUOTE -268435456))
(CPUT '*MIN-FIXNUM* 'DEFINED T)
(CPUT '*MAX-FIXNUM* 'CONSTANT (QUOTE 268435455))
(CPUT '*MAX-FIXNUM* 'DEFINED T)
(CPUT 'MAKE-AND-REPLACE-BIGNUM 'DEFINED (QUOTE (5 . 5)))
(CPUT 'COPY-BIGNUM 'DEFINED (QUOTE (1 . 1)))
(CPUT 'BIGNUM-TRIM! 'DEFINED (QUOTE (1 . 9999)))
(CPUT '%DIGIT-ADD 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (U V CARRY VALUES)
(LET ((SUM (FIXNUM-ADD (FIXNUM-ADD U V) CARRY))) (LET ((D (FIXNUM-LOGANDC2
SUM -8192))) (VALUES D (IF (FIXNUM-EQUAL? D SUM) 0 1)))))))
(CPUT '%DIGIT-ADD 'DEFINED (QUOTE (4 . 4)))
(CPUT '%DIGIT-SUBTRACT 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (U V CARRY VALUES)
(LET ((DIFF (FIXNUM-SUBTRACT (FIXNUM-SUBTRACT U V) CARRY))) (LET ((D (FIXNUM-LOGANDC2
DIFF -8192))) (VALUES D (IF (FIXNUM-EQUAL? D DIFF) 0 1)))))))
(CPUT '%DIGIT-SUBTRACT 'DEFINED (QUOTE (4 . 4)))
(CPUT '%DIGIT-MULTIPLY 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (U V VALUES)
(LET ((KLUDGE (FIXNUM-MULTIPLY U V))) (VALUES (FIXNUM-LOGANDC2 KLUDGE -8192)
(FIXNUM-ASH KLUDGE -13))))))
(CPUT '%DIGIT-MULTIPLY 'DEFINED (QUOTE (3 . 3)))
(CPUT '%DIGIT-DIVIDE 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (UHIGH ULOW V VALUES)
(LET ((U (FIXNUM-ADD (FIXNUM-ASH UHIGH 13) ULOW))) (LET ((Q (FIXNUM-DIVIDE
U V))) (VALUES Q (FIXNUM-SUBTRACT U (FIXNUM-MULTIPLY V Q))))))))
(CPUT '%DIGIT-DIVIDE 'DEFINED (QUOTE (4 . 4)))
(CPUT 'ADD-STEP 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (U V DESTV I CARRY)
(LET ((SUM (FIXNUM-ADD (FIXNUM-ADD U V) CARRY))) (LET ((D (FIXNUM-LOGANDC2
SUM -8192))) (BLOCK (SET-EXTEND-ELT (EXTEND-ELT-FIXED DESTV 3) I D) (IF
(FIXNUM-EQUAL? D SUM) 0 1)))))))
(CPUT 'ADD-STEP 'DEFINED (QUOTE (5 . 5)))
(CPUT 'ADD-MAGNITUDES 'DEFINED (QUOTE (2 . 2)))
(CPUT 'REALLY-ADD-MAGNITUDES 'DEFINED (QUOTE (2 . 2)))
(CPUT 'SUBTRACT-STEP 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (U V DESTV I CARRY)
(LET ((DIFF (FIXNUM-SUBTRACT (FIXNUM-SUBTRACT U V) CARRY))) (LET ((D (FIXNUM-LOGANDC2
DIFF -8192))) (BLOCK (SET-EXTEND-ELT (EXTEND-ELT-FIXED DESTV 3) I D) (IF
(FIXNUM-EQUAL? D DIFF) 0 1)))))))
(CPUT 'SUBTRACT-STEP 'DEFINED (QUOTE (5 . 5)))
(CPUT 'SUBTRACT-MAGNITUDES 'DEFINED (QUOTE (2 . 2)))
(CPUT 'MULTIPLY-STEP 'DEFINED (QUOTE (5 . 5)))
(CPUT 'MULTIPLY-MAGNITUDES 'DEFINED (QUOTE (2 . 2)))
(CPUT 'DIV2-MAGNITUDES 'DEFINED (QUOTE (3 . 3)))
(CPUT '*DIV-DEBUG?* 'CONSTANT NIL)
(CPUT '*DIV-DEBUG?* 'DEFINED T)
(CPUT 'REALLY-DIV2-MAGNITUDES 'DEFINED (QUOTE (6 . 6)))
(CPUT 'COMPUTE-Q^ 'DEFINED (QUOTE (5 . 5)))
(CPUT 'ADD-BACK 'DEFINED (QUOTE (6 . 6)))
(CPUT 'B-F-DIV2 'DEFINED (QUOTE (3 . 3)))
(CPUT 'B-F-DIV2-UNNORMALIZED 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (U V VALUES)
(%B-F-DIV2 U V (QUOTE ()) VALUES))))
(CPUT 'B-F-DIV2-UNNORMALIZED 'DEFINED (QUOTE (3 . 3)))
(CPUT '%B-F-DIV2 'DEFINED (QUOTE (4 . 4)))
(CPUT 'B-F-DIV2-AUX 'DEFINED (QUOTE (6 . 6)))
(CPUT 'BIGNUM-COMPARE-MAGNITUDES 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BIGNUM-MAGNITUDE-LESS? 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (U V)
(FIXNUM-LESS? (BIGNUM-COMPARE-MAGNITUDES U V) 0))))
(CPUT 'BIGNUM-MAGNITUDE-LESS? 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BIGNUM-COMPARE 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BIGNUM-LESS? 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (U V) (FIXNUM-LESS?
(BIGNUM-COMPARE U V) 0))))
(CPUT 'BIGNUM-LESS? 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BIGNUM-EQUAL? 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (U V) (FIXNUM-EQUAL?
(BIGNUM-COMPARE U V) 0))))
(CPUT 'BIGNUM-EQUAL? 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BIGNUM-ADD 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BIGNUM-SUBTRACT 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BIGNUM-MULTIPLY-SIGN 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (U V) (IF
(FIXNUM-EQUAL? (EXTEND-ELT-FIXED U 2) (EXTEND-ELT-FIXED V 2)) 1 -1))))
(CPUT 'BIGNUM-MULTIPLY-SIGN 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BIGNUM-MULTIPLY 'DEFINED (QUOTE (2 . 2)))
(CPUT 'B-F-MULTIPLY 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BIGNUM-DIV2 'DEFINED (QUOTE (3 . 3)))
(CPUT 'BIGNUM-DIVIDE 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BIGNUM-REMAINDER 'DEFINED (QUOTE (2 . 2)))
(CPUT 'B-F-ADD 'DEFINED (QUOTE (2 . 2)))
(CPUT 'B-F-SUBTRACT 'DEFINED (QUOTE (2 . 2)))
(CPUT 'B-F-DIVIDE 'DEFINED (QUOTE (2 . 2)))
(CPUT 'B-F-REMAINDER 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BIGNUM-NEGATE 'DEFINED (QUOTE (1 . 1)))
(CPUT 'BIGNUM-ODD? 'DEFINED (QUOTE (1 . 1)))
(CPUT 'BIGNUM-HOWLONG 'DEFINED (QUOTE (1 . 1)))
(CPUT 'BIGNUM-ASHL 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BIGNUM-ASHL! 'DEFINED (QUOTE (2 . 2)))
(CPUT 'FIXNUM-ASHL-BIGNUM 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BIGNUM-ASHR 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BIGNUM-ASHR-FIXNUM 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BIGNUM-ASHR! 'DEFINED (QUOTE (2 . 2)))
(CPUT 'FIXNUM-AFTERMATH->BIGNUM 'DEFINED (QUOTE (3 . 3)))
(CPUT 'FIXNUM-ADD-CAREFULLY 'DEFINED (QUOTE (2 . 2)))
(CPUT 'FIXNUM-SUBTRACT-CAREFULLY 'DEFINED (QUOTE (2 . 2)))
(CPUT 'FIXNUM-MULTIPLY-CAREFULLY 'DEFINED (QUOTE (2 . 2)))
(CPUT 'FIXNUM-DIVIDE-CAREFULLY 'DEFINED T)
(CPUT 'FIXNUM-NEGATE-CAREFULLY 'DEFINED (QUOTE (1 . 1)))
(CPUT 'SIGN&MAGNITUDE->BIGNUM 'DEFINED (QUOTE (3 . 3)))
(CPUT 'NORMALIZE-INTEGER 'DEFINED (QUOTE (1 . 1)))
(CPUT '*MAX-FIXNUM-AS-BIGNUM* 'DEFINED T)
(CPUT '*MIN-FIXNUM-AS-BIGNUM* 'DEFINED T)
(CPUT 'FIXNUM->BIGNUM 'DEFINED (QUOTE (1 . 1)))
(CPUT 'BIGNUM->FIXNUM 'DEFINED (QUOTE (1 . 1)))
(CPUT 'POINTER->INTEGER 'DEFINED (QUOTE (1 . 1)))
(CPUT 'INTEGER->POINTER 'DEFINED (QUOTE (1 . 1)))
(CPUT 'BIGNUM->FLONUM 'DEFINED (QUOTE (1 . 1)))
(CPUT 'PRINT-BIGNUM 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BIGNUM->BUFFER 'DEFINED (QUOTE (1 . 1)))
(CPUT 'OUTPUT-BIGNUM-DIGIT 'DEFINED (QUOTE (4 . 4)))
(CPUT '\#CHARS-IN-BIT-FIELD 'DEFINED (QUOTE (2 . 2)))
(CPUT 'STRING->INTEGER 'DEFINED (QUOTE (2 . 2)))
(CPUT 'STRING->INTEGER-AUX 'DEFINED (QUOTE (5 . 5)))
(CPUT 'STRING->FIXNUM 'DEFINED (QUOTE (4 . 4)))
(CPUT '*BIGNUM-PIG 'DEFINED (QUOTE (1 . 1)))

