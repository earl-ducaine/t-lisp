(HERALD (TSYS PCOMMON T 32)
        (ENV () (TSYS OPEN) (TSYS ALIASES))
        (SYNTAX-TABLE
         (BLOCK (*REQUIRE NIL '(TSYS GUARD) (THE-ENVIRONMENT))
                (ENV-SYNTAX-TABLE (THE-ENVIRONMENT)))))

;;; Copyright (c) 1983, 1984 Yale University

;;;; Primops

;;; This file should correspond to all primops defined in the compiler's
;;; COMMON module, i.e. VAX/68000 common primops.

(DEFINE-OPERATION (UNGUARDED-VERSION PROC) PROC)        ; ?

(DEFINE (INCONSISTENT-ARGS PROC . ARGS)
  (ERROR "arguments are inconsistent~%  ~S"
         (CONS (OR (IDENTIFICATION PROC) PROC) ARGS)))

(DEFINE (ZERO-ARG-PRIMOP PROC CONSISTENT?)
  (IF (NEQ? CONSISTENT? TRUE)
      (ERROR "what the f---? - ZERO-ARG-PRIMOP"))
  PROC)

(DEFINE-GUARD (ONE-ARG-PRIMOP PROC CONSISTENT? TYPE1)
  (TYPE1)
  CONSISTENT?)

(DEFINE-GUARD (TWO-ARG-PRIMOP PROC CONSISTENT? TYPE1 TYPE2)
  (TYPE1 TYPE2)
  CONSISTENT?)

(DEFINE-GUARD (THREE-ARG-PRIMOP PROC CONSISTENT? TYPE1 TYPE2 TYPE3)
  (TYPE1 TYPE2 TYPE3)
  CONSISTENT?)

(DEFINE-GUARD (FOUR-ARG-PRIMOP PROC CONSISTENT? TYPE1 TYPE2 TYPE3 TYPE4)
  (TYPE1 TYPE2 TYPE3 TYPE4)
  CONSISTENT?)


;;; Type predicates

(DEFINE-LOCAL-SYNTAX (DEFINE-PRIMOP-TYPE-PREDICATE FN)
  `(DEFINE ,FN (PRIMOP-PROC ,FN (OBJ))))

(DEFINE-PRIMOP-TYPE-PREDICATE FIXNUM?)
(DEFINE-PRIMOP-TYPE-PREDICATE MISC?)
(DEFINE-PRIMOP-TYPE-PREDICATE STRING?)
(DEFINE-PRIMOP-TYPE-PREDICATE PAIR?)
(DEFINE-PRIMOP-TYPE-PREDICATE EXTEND?)
(DEFINE-PRIMOP-TYPE-PREDICATE TEMPLATE?)
(DEFINE-PRIMOP-TYPE-PREDICATE FLONUM?)
(DEFINE-PRIMOP-TYPE-PREDICATE REL-ITEM?)


;;; Field selectors for primitive types

;;; Currently no provision for type-restricted fields (i.e. doing a CHECK-ARG
;;; on VALUE - see PRIMITIVE-FIELD-SETTER).  This is important e.g.
;;; for VECTOR-LENGTH.  Fix someday.

(DEFINE-GUARD (PRIMITIVE-FIELD-GETTER PROC TYPE)
  (TYPE)                                ; Arg types
  TRUE                                  ; Consistency check
  TRUE)                                 ; Result type

(DEFINE-GUARD (PRIMITIVE-FIELD-SETTER SET-PROC TYPE VAL-TYPE)
  (TYPE VAL-TYPE)
  TRUE
  TRUE)

(DEFINE (PRIMITIVE-FIELD PROC SET-PROC TYPE VAL-TYPE)
  (PRIMITIVE-FIELD-1 PROC SET-PROC TYPE TYPE VAL-TYPE))

(DEFINE (PRIMITIVE-FIELD-1 PROC SET-PROC TYPE SET-TYPE VAL-TYPE)
  (MAKE-ACCESSOR (PRIMITIVE-FIELD-GETTER PROC TYPE)
                 (PRIMITIVE-FIELD-SETTER SET-PROC SET-TYPE VAL-TYPE)))

(DEFINE-LOCAL-SYNTAX (DEFINE-PRIMITIVE-FIELD PROC TYPE VAL-TYPE)
  (LET ((SET-PROC (CONCATENATE-SYMBOL 'SET- PROC)))
    `(BLOCK (DEFINE ,PROC
              (PRIMITIVE-FIELD (PRIMOP-PROC ,PROC (OBJ))
                               (PRIMOP-PROC ,SET-PROC (OBJ VAL))
                               ,TYPE
                               ,VAL-TYPE))
            ;; (DEFINE ,SET-PROC (SETTER ,PROC))
            )))

;(DEFINE-PRIMITIVE-FIELD CAR PAIR?)
;(DEFINE-PRIMITIVE-FIELD CDR PAIR?)

(DEFINE CAR (PRIMITIVE-FIELD-1 (PRIMOP-PROC CAR (OBJ))
                               (PRIMOP-PROC SET-CAR (OBJ VALUE))
                               LIST?
                               PAIR?
                               TRUE))
(DEFINE CDR (PRIMITIVE-FIELD-1 (PRIMOP-PROC CDR (OBJ))
                               (PRIMOP-PROC SET-CDR (OBJ VALUE))
                               LIST?
                               PAIR?
                               TRUE))
;(DEFINE SET-CAR (SETTER CAR))
;(DEFINE SET-CDR (SETTER CDR))

(DEFINE-PRIMITIVE-FIELD STRING-LENGTH   STRING? NONNEGATIVE-FIXNUM?)
(DEFINE-PRIMITIVE-FIELD STRING-POINTER  STRING? TRUE)
(DEFINE-PRIMITIVE-FIELD STRING-BASE     STRING? NONNEGATIVE-FIXNUM?)

(DEFINE-PRIMITIVE-FIELD EXTEND-TEMPLATE EXTEND? TEMPLATE?)

(DEFINE-PRIMITIVE-FIELD SYMBOL-VCELL    SYMBOL? TRUE)   ; vcell or null
(DEFINE-PRIMITIVE-FIELD SYMBOL-PNAME    SYMBOL? STRING?)
(DEFINE-PRIMITIVE-FIELD SYMBOL-PLIST    SYMBOL? LIST?)

(DEFINE-PRIMITIVE-FIELD VCELL-CONTENTS  VCELL? TRUE)
(DEFINE-PRIMITIVE-FIELD VCELL-ID        VCELL? TRUE)    ; symbol?
(DEFINE-PRIMITIVE-FIELD VCELL-INFO      VCELL? TRUE)

(DEFINE-PRIMITIVE-FIELD ESCAPE-PROCEDURE-FRAME ESCAPE-PROCEDURE? FRAME?)

(DEFINE-PRIMITIVE-FIELD VECTOR-LENGTH       VECTOR? NONNEGATIVE-FIXNUM?)

(DEFINE-PRIMITIVE-FIELD BITV-LENGTH         BITV?   NONNEGATIVE-FIXNUM?)
(DEFINE-PRIMITIVE-FIELD BYTEV-LENGTH        BYTEV?  NONNEGATIVE-FIXNUM?)

(DEFINE-PRIMITIVE-FIELD UNIT-CODE            UNIT? FIXNUM?)    ; ugh
(DEFINE-PRIMITIVE-FIELD UNIT-THING           UNIT? TRUE)       ; procedure?
(DEFINE-PRIMITIVE-FIELD UNIT-SOURCE-FILENAME UNIT? TRUE)
(DEFINE-PRIMITIVE-FIELD UNIT-ID              UNIT? TRUE)
(DEFINE-PRIMITIVE-FIELD UNIT-ENV             UNIT? TRUE)       ; env or null
(DEFINE-PRIMITIVE-FIELD UNIT-HERALD          UNIT? TRUE)       ; list or struct

(DEFINE-PRIMITIVE-FIELD %STATE-OP FRAME? OPERATION?)

(DEFINE-PRIMITIVE-FIELD XENOID-POINTER  XENOID? TRUE)

(DEFINE-PRIMITIVE-FIELD BOGUS-ENTITY-PROCEDURE BOGUS-ENTITY? TRUE)
(DEFINE-PRIMITIVE-FIELD BOGUS-ENTITY-HANDLER   BOGUS-ENTITY? PROCEDURE?)

(DEFINE-PRIMITIVE-FIELD TEMPLATE-CHUNK      TEMPLATE? TRUE)     ; ?
