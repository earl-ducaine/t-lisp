(HERALD (TSYS STROPS T 59)
        (ENV TSYS))

;;; Copyright (c) 1983, 1984 Yale University

;;;; I/O stream operations

;;; What about FILEPOS and SET-FILEPOS?  last-modified time?
;;; Name some other operations that should be supported.

;;; General stream operations.

(DEFINE-PREDICATE STREAM?)

;;; Make (WITH-OPEN-STREAMS ((Z (MAYBE-OPEN ...))) ...) and
;;;      (WITH-OPEN-STREAMS ((Z (CHANNEL-OPEN ...))) ...)
;;; win.

(DEFINE-OPERATION (CLOSE STREAM)
  (COND ((OR (CHANNEL? STREAM)
             (NULL? STREAM))
         NIL)
        (ELSE
         (ERROR "operation not handled~%  (CLOSE ~S)" STREAM))))
                

;;; Opening lists and strings "wins" by opening the named file.

(DEFINE-OPERATION (MAYBE-OPEN NAMESPEC MODES)
  (MAYBE-OPEN (->FILENAME NAMESPEC) MODES))

(DEFINE-OPERATION (OPEN NAMESPEC MODES)
  (OR (MAYBE-OPEN NAMESPEC MODES)
      (ERROR "(~S ~S ~S) failed" 'OPEN NAMESPEC MODES)))

(DEFINE-OPERATION (STREAM-CHANNEL STREAM) NIL)      ;NIL for OBJECT-FILE?

(DEFINE-OPERATION (LINE-LENGTH STREAM)
; (CHECK-ARG STREAM? STREAM LINE-LENGTH)
  (IGNORE STREAM)
  *THE-STANDARD-LINE-LENGTH*)

(DEFINE *THE-STANDARD-LINE-LENGTH* 80.)

(DEFINE-OPERATION (STREAM-OPEN? STREAM) T)      ; ??

;;; Input operations.  All input streams are expected to handle READC and
;;; either UNREADC or PEEKC.

(DEFINE-PREDICATE INPUT-STREAM?)
(DEFINE-PREDICATE INTERACTIVE-STREAM?)

(DEFINE-OPERATION (READ-CHAR STREAM))           ; Must be handled.
(DEFINE READC READ-CHAR)

(DEFINE-OPERATION (UNREAD-CHAR STREAM))         ; Must be handled.
(DEFINE UNREADC UNREAD-CHAR)

(DEFINE-OPERATION (PEEK-CHAR STREAM)
  (BLOCK0 (READ-CHAR STREAM) (UNREAD-CHAR STREAM)))
(DEFINE PEEKC PEEK-CHAR)

(DEFINE-OPERATION (READ STREAM)
  (READ-OBJECT STREAM (STREAM-READ-TABLE STREAM)))

(DEFINE-SETTABLE-OPERATION (STREAM-READ-TABLE STREAM)
  *STANDARD-READ-TABLE*)
(DEFINE SET-STREAM-READ-TABLE (SETTER STREAM-READ-TABLE))

(DEFINE-OPERATION (READ-LINE STREAM)
  (LET ((READC (PRE-DISPATCH READC STREAM))
        (BUFFER (GET-BUFFER)))
    (BLOCK0 (ITERATE LOOP ()
              (LET ((CH (READC STREAM))
                    (DONE (LAMBDA () (COPY-STRING BUFFER))))    ; go to.
                (COND ((EOF? CH)
                       (COND ((STRING-EMPTY? BUFFER) *EOF*)
                             (ELSE (UNREADC STREAM) (DONE))))
                      ((CHAR= CH #\NEWLINE) (DONE))
                      (ELSE (BUFFER-WRITEC BUFFER CH)
                            (LOOP)))))
            (RELEASE-BUFFER BUFFER))))

(DEFINE-OPERATION (CLEAR-INPUT STREAM) NIL)  

;;; Output operations.  All output streams are expected to handle WRITEC.

(DEFINE-PREDICATE OUTPUT-STREAM?)

(DEFINE-OPERATION (WRITE-CHAR STREAM CHAR))             ; Must be handled.
(DEFINE WRITEC WRITE-CHAR)

(DEFINE-OPERATION (WRITE-STRING STREAM STRING)
  (LET ((WRITEC (PRE-DISPATCH WRITEC STREAM))
        (LIMIT (STRING-LENGTH STRING)))
    (DO ((I 0 (FX+ I 1)))               ; can't use CHDR; compiler sucks.
        ((FX>= I LIMIT) T)
      (WRITEC STREAM (STRING-ELT STRING I)))))
(DEFINE WRITES WRITE-STRING)

(DEFINE-OPERATION (WRITE-LINE STREAM STRING)
  (WRITE-STRING STREAM STRING)
  (NEWLINE STREAM))

(DEFINE-OPERATION (WRITE STREAM OBJ)
  (PRINT OBJ STREAM))

(DEFINE-OPERATION (SPACE STREAM)
  (COND ((FX> (HPOS STREAM) (FX- (LINE-LENGTH STREAM) 10.))
         (NEWLINE STREAM))
        (ELSE (WRITEC STREAM #\SPACE))))

(DEFINE-OPERATION (NEWLINE STREAM)
  (WRITEC STREAM #\NEWLINE))
           
(DEFINE-OPERATION (FRESH-LINE STREAM)
  (COND ((FX> (HPOS STREAM) 0) (NEWLINE STREAM))))

(DEFINE-OPERATION (FORCE-OUTPUT STREAM) NIL)    ; presumably ok to ignore

(LSET *TAB-STOP-INTERVAL* NIL)

(DEFINE HPOS
  (OPERATION (LAMBDA (STREAM) 1)      ; force fresh-line to do newline
	     ((SETTER SELF) SET-HPOS)))

(DEFINE-OPERATION (SET-HPOS STREAM POS)
  (LET ((P (HPOS STREAM)))
    (LET ((P (COND ((FX> P POS) (NEWLINE STREAM) 0)
                   (ELSE P))))
      (LET ((P (COND (*TAB-STOP-INTERVAL*
                      (DO ((P P (FLOOR (FX+ P *TAB-STOP-INTERVAL*)
                                       *TAB-STOP-INTERVAL*)))
                          ((FX> P (FX- POS *TAB-STOP-INTERVAL*))
                           P)
                        (WRITEC STREAM #\TAB)))
                     (ELSE P))))
        (WRITE-SPACES STREAM (FX- POS P))))))

(DEFINE VPOS
  (OPERATION (LAMBDA (STREAM) 1)
	     ((SETTER SELF) SET-VPOS)))

(DEFINE-OPERATION (SET-VPOS STREAM POS)
  (LET ((V (VPOS STREAM)))
    (DO ((V V (FX+ V 1)))
        ((FX>= V POS) POS)
      (NEWLINE STREAM))))

;;; Other random operations.

(DEFINE-OPERATION (PRINT-WIDTH OBJ)
  (WITH-OUTPUT-WIDTH-STREAM STREAM (PRINT OBJ STREAM)))

(DEFINE-OPERATION (DISPLAY-WIDTH OBJ)
  (WITH-OUTPUT-WIDTH-STREAM STREAM (DISPLAY OBJ STREAM)))

(DEFINE-OPERATION (STREAM-FILENAME STREAM) NIL)
