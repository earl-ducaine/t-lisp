;;; VAX TC support file for #[Filename VULCAN TSYS POOL T 0]
;;; TC version 1.4 (64)

(COMMENT (SOURCE-FILENAME #[Filename VULCAN TSYS POOL T 0]))
(COMMENT (HERALDED-FILENAME #[Filename () () POOL]))
(SYSBUILD-ITEM END)
(CPUT 'CONS-FROM-FREELIST 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (A D) (IF
*PAIR-FREELIST* (LET ((CELL *PAIR-FREELIST*)) (BLOCK (SET-CAR *PAIR-FREELIST*
A) (LET ((SET.4 (CDR *PAIR-FREELIST*))) (BLOCK (SET *PAIR-FREELIST* SET.4)
SET.4)) (SET-CDR CELL D) CELL)) (CONS A D)))))
(CPUT 'CONS-FROM-FREELIST 'DEFINED (QUOTE (2 . 2)))
(CPUT 'RETURN-TO-FREELIST 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (CELL) (BLOCK
(SET-CAR CELL (QUOTE FREE)) (SET-CDR CELL *PAIR-FREELIST*) (SET *PAIR-FREELIST*
CELL) (QUOTE T)))))
(CPUT 'RETURN-TO-FREELIST 'DEFINED (QUOTE (1 . 1)))
(CPUT 'RETURN-LIST-TO-FREELIST 'DEFINED (QUOTE (1 . 1)))
(CPUT '%POOL-STYPE 'DEFINED T)
(CPUT 'MAKE-%POOL 'DEFINED T)
(CPUT '%POOL? 'DEFINED T)
(CPUT 'HANDLE-%POOL 'DEFINED T)
(CPUT '%POOL-ID 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (OBJ) (EXTEND-ELT-FIXED
OBJ 2))))
(CPUT '%POOL-ID 'DEFINED T)
(CPUT '%POOL-ID 'SETTER (QUOTE (#[Syntax LAMBDA] (OBJ VAL) (SET-EXTEND-ELT-FIXED
OBJ 2 VAL))))
(CPUT '%POOL-GENERATOR 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (OBJ) (EXTEND-ELT-FIXED
OBJ 3))))
(CPUT '%POOL-GENERATOR 'DEFINED T)
(CPUT '%POOL-GENERATOR 'SETTER (QUOTE (#[Syntax LAMBDA] (OBJ VAL) (SET-EXTEND-ELT-FIXED
OBJ 3 VAL))))
(CPUT '%POOL-FREELIST 'INTEGRABLE-FUNCTION (QUOTE (LAMBDA (OBJ) (EXTEND-ELT-FIXED
OBJ 4))))
(CPUT '%POOL-FREELIST 'DEFINED T)
(CPUT '%POOL-FREELIST 'SETTER (QUOTE (#[Syntax LAMBDA] (OBJ VAL) (SET-EXTEND-ELT-FIXED
OBJ 4 VAL))))
(CPUT 'MAKE-POOL 'DEFINED (QUOTE (2 . 2)))
(CPUT 'OBTAIN-FROM-POOL 'DEFINED (QUOTE (1 . 1)))
(CPUT 'RETURN-TO-POOL 'DEFINED (QUOTE (2 . 2)))
(CPUT '*POOL-POPULATION* 'DEFINED T)
(CPUT 'POOL-PRE-GC-HOOK 'DEFINED (QUOTE (0 . 0)))
(CPUT '*BUFFER-POOLS* 'DEFINED T)
(CPUT '*SMALLEST-BUFFER-SIZE* 'CONSTANT (QUOTE 62))
(CPUT '*SMALLEST-BUFFER-SIZE* 'DEFINED T)
(CPUT 'BUFFER-POOL 'DEFINED (QUOTE (1 . 1)))
(CPUT 'GET-BUFFER 'DEFINED (QUOTE (0 . 0)))
(CPUT 'GET-BUFFER-OF-SIZE 'DEFINED (QUOTE (1 . 1)))
(CPUT 'RELEASE-BUFFER 'DEFINED (QUOTE (1 . 1)))
(CPUT 'ENSURE-BUFFER-SIZE 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BUFFER-WRITEC 'DEFINED (QUOTE (2 . 2)))
(CPUT 'BUFFER-WRITES 'DEFINED (QUOTE (2 . 2)))

