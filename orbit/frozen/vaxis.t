(herald (tas vaxis t 28))


(block
 (define *vax-instructions* (make-vector 256))
 *repl-wont-print*)

(define-local-syntax (define-vax-instructions . ispecs)
  (locale ()
    (define (process-vaxi opcode mnemonic opspecs)
      (if (fx> opcode 255) (error "*define-vaxi - opcode ~s too big" opcode))
          `((define-constant ,(concatenate-symbol 'vax/ mnemonic) ,opcode)
            (set (vref *vax-instructions* ,opcode)
                 (string-downcase! (symbol->string ',mnemonic)))))

    `(block
      ,@(apply append!
               (map (lambda (ispec)
                      (process-vaxi (cadr ispec) (car ispec) (cddr ispec)))
                    ispecs)))

    ))
           
(define-vax-instructions            
  (ADDL2 #xC0 (add rl) (sum ml))
  (ADDL3 #xC1 (add1 rl) (add2 rl) (sum wl))
  (ASHL #x78 (cnt rb) (src rl) (dst wl))
  (BCC #x1E (displ bb))
  (BCS #x1F (displ bb))
  (BEQL #x13 (displ bb))
  (BEQLU #x13 (displ bb))
  (BGEQ #x18 (displ bb))
  (BGEQU #x1E (displ bb))
  (BGTR #x14 (displ bb))
  (BGTRU #x1A (displ bb))
  (BLEQU #x1B (displ bb))
  (BLSS #x19 (displ bb))
  (BLSSU #x1F (displ bb))
  (BNEQ #x12 (displ bb))
  (BNEQU #x12 (displ bb))
  (BRB #x11 (displ bb))
  (BRW #x31 (displ bw))
  (BVC #x1C (displ bb))
  (BVS #x1D (displ bb))
  (CLRL #xD4 (dst wl))
  (CMPB #x91 (src1 rb) (src2 rb))
  (CMPL #xD1 (src1 rl) (src2 rl))
  (CMPZV #xED (pos rl) (size rb) (base vb) (src rl))
  (DIVL3 #xC7 (divr rl) (divd rl) (quo wl))
  (JMP #x17 (dst ab))
  (JSB #x16 (dst ab))
  (MOVAL #xDE (src al) (dst wl))
  (MOVB #x90 (src rb) (dst wb))
  (MOVL #xD0 (src rl) (dst wl))
  (MULL2 #xC4 (mulr rl) (prod ml))
  (MULL3 #xC5 (mulr rl) (muld rl) (prod wl))
  (PUSHAL #xDF (src al))
  (PUSHL #xDD (src rl))
  (RET #x04)
  (RSB #x05)
  (SUBL2 #xC2 (sub rl) (dif ml))
  (SUBL3 #xC3 (sub rl) (min rl) (dif wl))
  )
